pipeline:
  name: python
  identifier: python
  projectIdentifier: default_project
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: account.mygit
        repoName: python
        build: <+input>
  stages:
    - stage:
        name: python_build
        identifier: python_build
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          execution:
            steps:
              - step:
                  type: Run
                  name: Run_1
                  identifier: Run_1
                  spec:
                    shell: Bash
                    command: |-
                      python -m venv venv
                      source venv/bin/activate
                      pip install -r requirements.txt
                      python setup.py sdist
                      mkdir -p dist 
                      tar -cvzf dist/dronedemo-1.0.tar.gz ./dronedemo
              - step:
                  type: Run
                  name: Run_2
                  identifier: Run_2
                  spec:
                    shell: Bash
                    command: ls -lR /harness/workspace
    - stage:
        name: Upload Tar to Artifactory
        identifier: Upload_Tar_to_Artifactory
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          execution:
            steps:
              - step:
                  type: ArtifactoryUpload
                  name: ArtifactoryUpload_1
                  identifier: ArtifactoryUpload_1
                  spec:
                    connectorRef: account.myartifactory
                    target: /my-artifact-1.0.0.tar
                    sourcePath: dist/dronedemo-1.0.tar.gz
                  description: to upload tar files to Jfrog antifactory
